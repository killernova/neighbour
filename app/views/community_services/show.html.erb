<% provide :title, '社区服务' %>
<div class="show-community-service">
  <div class="row service-title">
    <div class="columns small-10 small-offset-1">
      <h3 class="text-center"><%= @community_service.title %></h3>
    </div>
  </div>

  <div class="row sub-title-community-service">
    <div class="columns small-10 small-offset-1">
      <%= render partial: 'sub_title', locals: { community_service: @community_service } %>
    </div>
  </div>

  <div class="row service-content">
    <% if @photos %>
    <% @photos.each do |pic| %>
    <div class="columns small-10 small-offset-1">
      <%= image_tag pic.image %>
    </div>
    <% end %>
    <% end %>
    <div class="columns small-10 small-offset-1">
      <%= simple_format @community_service.content %>
    </div>
  </div>
  <div class="row gdmap">
    <div class="columns small-10 small-offset-1">
      <div id="container"></div>
      <div id="tip">
    <span id="result"></span>
</div>
    </div>
  </div>
</div>
<%= render '/comments/comments_list_and_form' %>

<style type="text/css">
  html {
    height: 100%;
  }
  body {
    height: 100%;
    margin: 0;
    padding: 0;
  }
  #container {
    width: 90%;
    height: 260px;
    position: relative;
    margin-left: 5%;
  }
  .gdmap {
    margin-top: 20px;
    margin-bottom: 20px;
  }

</style>

<!--地图-->
<script type="text/javascript">
  var address = "<%= @address %>";
  console.log(address);
  var map = new AMap.Map("container", {
    //lang: 'en',
    zoom: 14,
    resizeEnable: false
  });
  function geocoder() {
    //AMap.service('AMap.Geocoder', function () { //回调函数
      //实例化Geocoder
      var geocoder = new AMap.Geocoder({});
      //地理编码,返回地理编码结果
      geocoder.getLocation(address, function (status, result) {
        console.log(status);
        if (status === 'complete' && result.info === 'OK') {
          console.log(result);
          geocoder_CallBack(result);
        }
      });
    //});
  }

  function addMarker(i, d) {
    var marker = new AMap.Marker({
      map: map,
      position: [d.location.getLng(), d.location.getLat()]
    });
    var infoWindow = new AMap.InfoWindow({
      content: d.formattedAddress,
      offset: {
        x: 0,
        y: -30
      }
    });
    marker.on("mouseover", function (e) {
      infoWindow.open(map, marker.getPosition());
    });
  }
  //地理编码返回结果展示
  function geocoder_CallBack(data) {
    var resultStr = "";
    //地理编码结果数组
    var geocode = data.geocodes;
    for (var i = 0; i < geocode.length; i++) {
      //拼接输出html
      resultStr += "<span style=\"font-size: 12px;padding:0px 0 4px 2px; border-bottom:1px solid #C1FFC1;\"><b>地址</b>：" + geocode[i].formattedAddress + "&nbsp;&nbsp;<b>的地理编码结果是:</b><b>&nbsp;&nbsp;&nbsp;&nbsp;坐标</b>：" + geocode[i].location.getLng() + ", " + geocode[i].location.getLat() + "<b>&nbsp;&nbsp;&nbsp;&nbsp;匹配级别</b>：" + geocode[i].level + "</span>";
      addMarker(i, geocode[i]);
      map.setCenter([geocode[i].location.getLng(), geocode[i].location.getLat()]);
    }

  }
</script>
